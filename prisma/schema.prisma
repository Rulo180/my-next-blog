// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  Comment   Comment[]
  savedPosts SavedPost[]
  reactions Reaction[]
}

model Post {
  id          String    @id @default(cuid())
  slug        String    @unique
  title       String
  content     String
  description String
  date        DateTime
  duration    Int
  comments    Comment[]
  imageUrl    String
  savedBy     SavedPost[]
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  postId    String
  Post      Post     @relation(fields: [postId], references: [id])
  reactions Reaction[]
}

model SavedPost {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model Reaction {
  id        String   @id @default(cuid())
  type      String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  commentId String
  comment   Comment  @relation(fields: [commentId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, commentId])
}
